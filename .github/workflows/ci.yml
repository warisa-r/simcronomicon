name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

permissions:
  contents: write
  pages: write
  id-token: write

jobs:
  # Fast functionality tests on all platforms
  basic-tests:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        python-version: [3.12]

    steps:
      - uses: actions/checkout@v4

      - uses: conda-incubator/setup-miniconda@v3
        with:
          environment-file: environment.yml
          activate-environment: simcronomicon-env

      - name: Install test dependencies
        shell: bash -l {0}
        run: |
          conda install -c conda-forge pytest pytest-cov
          pip install .

      - name: Run unit tests
        shell: bash -l {0}
        run: |
          pytest test/test_town.py test/test_sim.py test/test_visualization.py test/test_models/ -v --cov=. --cov-report=xml

      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v5
        with:
          token: ${{ secrets.CODECOV_TOKEN }}

  # tests that all examples work fine but only on Ubuntu for speed
  examples-tests:
    runs-on: ubuntu-latest
    needs: basic-tests  # Only run if unit tests pass

    steps:
      - uses: actions/checkout@v4

      - uses: conda-incubator/setup-miniconda@v3
        with:
          environment-file: environment.yml
          activate-environment: simcronomicon-env

      - name: Install examples dependencies
        shell: bash -l {0}
        run: |
          conda install -c conda-forge pytest nbconvert jupyter
          pip install .

      - name: Run example notebook tests
        shell: bash -l {0}
        run: |
          pytest test/test_examples.py -v --tb=short

  docs:
    runs-on: ubuntu-latest
    needs: [basic-tests, examples-tests]  # Wait for tests to pass
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'

    steps:
      - uses: actions/checkout@v4

      - uses: conda-incubator/setup-miniconda@v3
        with:
          environment-file: environment.yml
          activate-environment: simcronomicon-env

      - name: Install docs dependencies
        shell: bash -l {0}
        run: |
          conda install -c conda-forge sphinx sphinx-rtd-theme ghp-import
          pip install .

      - name: Build HTML documentation
        shell: bash -l {0}
        run: |
          cd docs/
          make html

      - name: Deploy to GitHub Pages
        shell: bash -l {0}
        run: |
          ghp-import -n -p -f docs/build/html

      - name: Output documentation URL
        run: |
          echo "Documentation deployed to: https://${{ github.repository_owner }}.github.io/${{ github.event.repository.name }}/"